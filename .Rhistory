# plot + geom_line(data = df, aes(x = x, y = y), color = "red")
# return(p)
}
y = 'Hypochondria'
plotFunc(y)
plotFunc <- function(column){
print(column)
plot <- ggplot(happinessSadness) +
geom_histogram(aes(x = happinessSadness[column], y = ..density..),
binwidth = 1, fill = "grey", color = "black")
# x <- seq(1, 5, length.out=100)
# df <- with(happinessSadness, data.frame(x = x, y = dnorm(x, mean(happinessSadness[column]), sd(happinessSadness[column]))))
# plot + geom_line(data = df, aes(x = x, y = y), color = "red")
# return(p)
}
y = 'Hypochondria'
plotFunc(y)
plot
View(happinessSadness)
plotFunc(y)
plot
p
plotFunc <- function(column){
print(column)
# plot <- ggplot(happinessSadness) +
#   geom_histogram(aes(x = happinessSadness[column], y = ..density..),
#                  binwidth = 1, fill = "grey", color = "black")
# x <- seq(1, 5, length.out=100)
df <- with(happinessSadness, data.frame(x = x, y = dnorm(x, mean(happinessSadness[column]), sd(happinessSadness[column]))))
plot + geom_line(data = df, aes(x = x, y = y), color = "red")
# return(p)
}
plotFunc(y)
plotFunc <- function(column){
print(column)
# plot <- ggplot(happinessSadness) +
#   geom_histogram(aes(x = happinessSadness[column], y = ..density..),
#                  binwidth = 1, fill = "grey", color = "black")
# x <- seq(1, 5, length.out=100)
df <- with(happinessSadness, data.frame(x = x, y = dnorm(x, mean(happinessSadness[column]), sd(happinessSadness[column]))))
plot + geom_line(data = df, aes(x = x, y = y), color = "red")
# return(p)
}
y = "Hypochondria"
plotFunc(y)
plotFunc <- function(,column){
print(column)
# plot <- ggplot(happinessSadness) +
#   geom_histogram(aes(x = happinessSadness[column], y = ..density..),
#                  binwidth = 1, fill = "grey", color = "black")
# x <- seq(1, 5, length.out=100)
df <- with(happinessSadness, data.frame(x = x, y = dnorm(x, mean(happinessSadness[column]), sd(happinessSadness[column]))))
plot + geom_line(data = df, aes(x = x, y = y), color = "red")
# return(p)
}
y = "Hypochondria"
plotFunc(y)
plotHypochondria <- ggplot(happinessSadness) +
geom_histogram(aes(x = happinessSadness['Hypochondria'], y = ..density..),
binwidth = 1, fill = "grey", color = "black")
x <- seq(1, 5, length.out=100)
df <- with(happinessSadness, data.frame(x = x, y = dnorm(x, mean(happinessSadness['Hypochondria']), sd(happinessSadness['Hypochondria']))))
plot + geom_line(data = df, aes(x = x, y = y), color = "red")
plotHypochondria <- ggplot(happinessSadness) +
geom_histogram(aes(x = happinessSadness['Hypochondria'], y = ..density..),
binwidth = 1, fill = "grey", color = "black")
x <- seq(1, 5, length.out=100)
df <- with(happinessSadness, data.frame(x = x, y = dnorm(x, mean(happinessSadness['Hypochondria']), sd(happinessSadness['Hypochondria']))))
View(happinessSadness)
happinessSadness['Hypochondria']
plotHypochondria <- ggplot(happinessSadness) +
geom_histogram(aes(x = happinessSadness$Hypochondria, y = ..density..),
binwidth = 1, fill = "grey", color = "black")
x <- seq(1, 5, length.out=100)
df <- with(happinessSadness, data.frame(x = x, y = dnorm(x, mean(happinessSadness$Hypochondria), sd(happinessSadness$Hypochondria))))
plotHypochondria + geom_line(data = df, aes(x = x, y = y), color = "red")
happinessSadness[,0:1]
happinessSadness[,0:1] <- 5- happinessSadness[,0:1]
happinessSadness[,0:1] <- 5- as.integer(happinessSadness[,0:1])
happinessSadness[[,0:1]] <- 5- as.integer(happinessSadness[,0:1])
for (i in happinessSadness[,:0:1])
for (i in happinessSadness[,:0:1])
for (i in happinessSadness[,:0:1]){}
for (i in happinessSadness[,0:1]){
i = 5-i
}
View(happinessSadness)
for (i in happinessSadness[,0:1]){
print(i)
i = 5-i
}
source('~/Documents/Data Analytics/Project/explorator.R')
df <- read.csv("imputedResponses.csv",na.strings=c(""," ","NA"))
# Following are the columns we chose as parameters to judge how happy pr sad a person is.
happinessFactors <- c("Hypochondria","Loneliness","Dreams","Number.of.friends","Mood.swings",
"Getting.angry","Life.struggles","Happiness.in.life","Energy.levels","Personality")
happinessSadness <- df[happinessFactors]
correlationMatrix = cor(happinessSadness,use="na.or.complete")
correlationMatrix
music <-  df[,121:139]
movie <- df[,140:151]
hobbies <- df[,79:110]
correlationMatrixMusicHappiness = cor(musicHappiness,use="na.or.complete")
plot = corrplot.mixed(correlationMatrixMusicHappiness, lower.col = "black", number.cex = .7,tl.pos = "l",
title="Correlation Plot",mar=c(0,0,1,0),tl.cex = 1/par("cex"))
musicHappiness <- cbind(music,happinessSadness)
pcaMusic <- prcomp(music,scale. = T)
pcaComponents <- pcaMusic$x[,1:3]
pcaMusicHappiness <- cbind(pcaComponents,happinessSadness)
corPca <- cor(pcaMusicHappiness)
corplotPCa <-corrplot(corPca)
hist(happinessSadness$Hypochondria, freq = FALSE)
x<-seq(1,5,length.out = 10)
y <- with(happinessSadness, dnorm(x, mean(Hypochondria), sd(Hypochondria)))
lines(x, y, col = "red")
plotHypochondria <- ggplot(happinessSadness) +
geom_histogram(aes(x = happinessSadness$Hypochondria, y = ..density..),
binwidth = 1, fill = "grey", color = "black")
x <- seq(1, 5, length.out=100)
df <- with(happinessSadness, data.frame(x = x, y = dnorm(x, mean(happinessSadness$Hypochondria), sd(happinessSadness$Hypochondria))))
plotHypochondria + geom_line(data = df, aes(x = x, y = y), color = "red")
for (i in happinessSadness[,0:1]){
print(i)
}
modifiedValue = c()
for (i in happinessSadness[,0:1]){
# print(i)
modifiedValue <- append(modifiedValue,5-i)
}
happinessSadness$Hypochondria = modifiedValue
View(happinessSadness)
modifiedHappinessSadness <- data.frame(happinessSadness[,c('Dreams','Number.of.friends','Happiness.in.life','Energy.levels','Personality')], lapply(happinessSadness[,c('Hypochondria','Loneliness','Mood.swings','Getting.angry','Life.struggles',)], modify) )
modify <- function(x) 5-x
modifiedHappinessSadness <- data.frame(happinessSadness[,c('Dreams','Number.of.friends','Happiness.in.life','Energy.levels','Personality')], lapply(happinessSadness[,c('Hypochondria','Loneliness','Mood.swings','Getting.angry','Life.struggles',)], modify) )
modifiedHappinessSadness <- data.frame(happinessSadness[,c('Dreams','Number.of.friends','Happiness.in.life','Energy.levels','Personality')], lapply(happinessSadness[,c('Hypochondria','Loneliness','Mood.swings','Getting.angry','Life.struggles')], modify) )
View(modifiedHappinessSadness)
pcaHappinessSadness <- prcomp(modifiedHappinessSadness,scale. = T)
pcaHappinessSadness
pcaHappinessSadness$x
pcaHappinessSadness <- prcomp(modifiedHappinessSadness)
pcaHappinessSadness$x
pcaHappinessSadness$x[1:5]
pcaHappinessSadness$x[,1:5]
pcaHappinessSadness$x[,0:1]
pcaHappinessSadness$x[,1]
cbind(modifiedHappinessSadness,pcaHappinessSadness)
modifiedHappinessSadness <- data.frame(happinessSadness[,c('Dreams','Number.of.friends','Happiness.in.life','Energy.levels','Personality')], lapply(happinessSadness[,c('Hypochondria','Loneliness','Mood.swings','Getting.angry','Life.struggles')], modify) )
pcaHappinessSadness <- prcomp(modifiedHappinessSadness)
pcaHappinessSadness = as.data.frame(pcaHappinessSadness$x[,1])
cbind(modifiedHappinessSadness,pcaHappinessSadness)
modifiedHappinessSadness = cbind(modifiedHappinessSadness,pcaHappinessSadness)
View(modifiedHappinessSadness)
colnames(modifiedHappinessSadness)[11] <- "pcaHappinessSadness"
View(modifiedHappinessSadness)
category <- c()
modifiedHappinessSadness = cbind(modifiedHappinessSadness,pcaHappinessSadness,category)
category <- vector(length = 1010)
modifiedHappinessSadness = cbind(modifiedHappinessSadness,pcaHappinessSadness,category)
colnames(modifiedHappinessSadness)[11] <- "pcaHappinessSadness"
View(modifiedHappinessSadness)
category <- vector("",length = 1010)
modifiedHappinessSadness = cbind(modifiedHappinessSadness,pcaHappinessSadness,category)
colnames(modifiedHappinessSadness)[11] <- "pcaHappinessSadness"
View(modifiedHappinessSadness)
source('~/Documents/Data Analytics/Project/explorator.R')
df <- read.csv("imputedResponses.csv",na.strings=c(""," ","NA"))
# Following are the columns we chose as parameters to judge how happy pr sad a person is.
happinessFactors <- c("Hypochondria","Loneliness","Dreams","Number.of.friends","Mood.swings",
"Getting.angry","Life.struggles","Happiness.in.life","Energy.levels","Personality")
happinessSadness <- df[happinessFactors]
correlationMatrix = cor(happinessSadness,use="na.or.complete")
correlationMatrix
music <-  df[,121:139]
movie <- df[,140:151]
hobbies <- df[,79:110]
correlationMatrixMusicHappiness = cor(musicHappiness,use="na.or.complete")
musicHappiness <- cbind(music,happinessSadness)
correlationMatrixMusicHappiness = cor(musicHappiness,use="na.or.complete")
plot = corrplot.mixed(correlationMatrixMusicHappiness, lower.col = "black", number.cex = .7,tl.pos = "l",
title="Correlation Plot",mar=c(0,0,1,0),tl.cex = 1/par("cex"))
pcaMusic <- prcomp(music,scale. = T)
pcaComponents <- pcaMusic$x[,1:3]
pcaMusicHappiness <- cbind(pcaComponents,happinessSadness)
corPca <- cor(pcaMusicHappiness)
corplotPCa <-corrplot(corPca)
hist(happinessSadness$Hypochondria, freq = FALSE)
x<-seq(1,5,length.out = 10)
y <- with(happinessSadness, dnorm(x, mean(Hypochondria), sd(Hypochondria)))
lines(x, y, col = "red")
plotHypochondria <- ggplot(happinessSadness) +
geom_histogram(aes(x = happinessSadness$Hypochondria, y = ..density..),
binwidth = 1, fill = "grey", color = "black")
x <- seq(1, 5, length.out=100)
df <- with(happinessSadness, data.frame(x = x, y = dnorm(x, mean(happinessSadness$Hypochondria), sd(happinessSadness$Hypochondria))))
plotHypochondria + geom_line(data = df, aes(x = x, y = y), color = "red")
#Inverting the values of Sadness Factors and performing PCA
modify <- function(x) 5-x
modifiedHappinessSadness <- data.frame(happinessSadness[,c('Dreams','Number.of.friends','Happiness.in.life','Energy.levels','Personality')], lapply(happinessSadness[,c('Hypochondria','Loneliness','Mood.swings','Getting.angry','Life.struggles')], modify) )
pcaHappinessSadness <- prcomp(modifiedHappinessSadness)
pcaHappinessSadness = as.data.frame(pcaHappinessSadness$x[,1])
category <- vector("",length = 1010)
modifiedHappinessSadness = cbind(modifiedHappinessSadness,pcaHappinessSadness,category)
colnames(modifiedHappinessSadness)[11] <- "pcaHappinessSadness"
category <- vector(length = 1010)
modifiedHappinessSadness = cbind(modifiedHappinessSadness,pcaHappinessSadness,category)
colnames(modifiedHappinessSadness)[11] <- "pcaHappinessSadness"
View(modifiedHappinessSadness)
modifiedHappinessSadness$category[modifiedHappinessSadness$pcaHappinessSadness<0] = "TRUE"
View(modifiedHappinessSadness)
modifiedHappinessSadness$category[modifiedHappinessSadness$pcaHappinessSadness>0] = "TRUE"
View(modifiedHappinessSadness)
modifiedHappinessSadness$category[modifiedHappinessSadness$pcaHappinessSadness<0] = "FALSE"
View(modifiedHappinessSadness)
View(modifiedHappinessSadness)
pcaHappinessSadness <- prcomp(modifiedHappinessSadness)
df <- read.csv("imputedResponses.csv",na.strings=c(""," ","NA"))
# Following are the columns we chose as parameters to judge how happy pr sad a person is.
happinessFactors <- c("Hypochondria","Loneliness","Dreams","Number.of.friends","Mood.swings",
"Getting.angry","Life.struggles","Happiness.in.life","Energy.levels","Personality")
happinessSadness <- df[happinessFactors]
correlationMatrix = cor(happinessSadness,use="na.or.complete")
correlationMatrix
music <-  df[,121:139]
movie <- df[,140:151]
hobbies <- df[,79:110]
musicHappiness <- cbind(music,happinessSadness)
correlationMatrixMusicHappiness = cor(musicHappiness,use="na.or.complete")
plot = corrplot.mixed(correlationMatrixMusicHappiness, lower.col = "black", number.cex = .7,tl.pos = "l",
title="Correlation Plot",mar=c(0,0,1,0),tl.cex = 1/par("cex"))
pcaMusic <- prcomp(music,scale. = T)
pcaComponents <- pcaMusic$x[,1:3]
pcaMusicHappiness <- cbind(pcaComponents,happinessSadness)
corPca <- cor(pcaMusicHappiness)
corplotPCa <-corrplot(corPca)
#Plot Hypochondria
plotHypochondria <- ggplot(happinessSadness) +
geom_histogram(aes(x = happinessSadness$Hypochondria, y = ..density..),
binwidth = 1, fill = "grey", color = "black")
x <- seq(1, 5, length.out=100)
df <- with(happinessSadness, data.frame(x = x, y = dnorm(x, mean(happinessSadness$Hypochondria), sd(happinessSadness$Hypochondria))))
plotHypochondria + geom_line(data = df, aes(x = x, y = y), color = "red")
#Inverting the values of Sadness Factors and performing PCA
modify <- function(x) 5-x
modifiedHappinessSadness <- data.frame(happinessSadness[,c('Dreams','Number.of.friends','Happiness.in.life','Energy.levels','Personality')], lapply(happinessSadness[,c('Hypochondria','Loneliness','Mood.swings','Getting.angry','Life.struggles')], modify) )
pcaHappinessSadness <- prcomp(modifiedHappinessSadness)
pcaHappinessSadness$rotation
pcaHappinessSadness = as.data.frame(pcaHappinessSadness$x[,1])
category <- vector(length = 1010)
modifiedHappinessSadness = cbind(modifiedHappinessSadness,pcaHappinessSadness,category)
colnames(modifiedHappinessSadness)[11] <- "pcaHappinessSadness"
modifiedHappinessSadness$category[modifiedHappinessSadness$pcaHappinessSadness<0] = "FALSE"
modifiedHappinessSadness$category[modifiedHappinessSadness$pcaHappinessSadness>0] = "TRUE"
View(modifiedHappinessSadness)
library(corrplot)
library(dplyr)
library(ggplot2)
# setwd("~/Downloads/DA/young-people-survey/youth-happiness-analysis/")
df <- read.csv("imputedResponses.csv",na.strings=c(""," ","NA"))
colnames <- read.csv("columns.csv")
# Following are the columns we chose as parameters to judge how happy pr sad a person is.
happinessFactors <- c("Hypochondria","Loneliness","Dreams","Number.of.friends","Mood.swings",
"Getting.angry","Life.struggles","Happiness.in.life","Energy.levels","Personality")
happinessSadness <- df[happinessFactors]
correlationMatrix = cor(happinessSadness,use="na.or.complete")
correlationMatrix
plot.new()
plot1 = corrplot.mixed(correlationMatrix, lower.col = "black", number.cex = .7,tl.pos = "l",
title="Correlation Plot",mar=c(0,0,1,0),tl.cex = 1/par("cex"))
covarianceMatrix = cov(happinessSadness, use="na.or.complete")
covarianceMatrix
# We consider the above mentoned variables as the factors of happiness and sadness.From their correlation
# plot we can infer that none of the variables under study are very highly correlated.So,we use these ten
# factors across sections of our dataset to find the variables which effect these factors the most and in
# the end effect the happiness / sadness of people.
par(mfrow=c(2,5))
for (factorV in happinessFactors){
# counts <- table(workingData[[factorV]],workingData$Age)
# barplot(counts, main= paste("Distribution by" ,factorV ,"and Age"),
#         xlab=factorV, col=c("#000019","#0000ff","#7f7fff","#b2b2ff","#e5e5ff")
# )
# legend("topright",legend = rownames(counts),fill = c("#000019","#0000ff","#7f7fff","#b2b2ff","#e5e5ff") ,ncol = 1,cex=0.4)
hist(happinessSadness[[factorV]], freq = FALSE)
x<-seq(1,5,length.out = 10)
y <- with(happinessSadness, dnorm(x, mean(factorV), sd(factorV)))
lines(x, y, col = "red")
}
library(corrplot)
library(dplyr)
library(ggplot2)
# setwd("~/Downloads/DA/young-people-survey/youth-happiness-analysis/")
df <- read.csv("imputedResponses.csv",na.strings=c(""," ","NA"))
colnames <- read.csv("columns.csv")
# Following are the columns we chose as parameters to judge how happy pr sad a person is.
happinessFactors <- c("Hypochondria","Loneliness","Dreams","Number.of.friends","Mood.swings",
"Getting.angry","Life.struggles","Happiness.in.life","Energy.levels","Personality")
happinessSadness <- df[happinessFactors]
correlationMatrix = cor(happinessSadness,use="na.or.complete")
correlationMatrix
plot.new()
# plot.new()
plot1 = corrplot.mixed(correlationMatrix, lower.col = "black", number.cex = .7,tl.pos = "l",
title="Correlation Plot",mar=c(0,0,1,0),tl.cex = 1/par("cex"))
plot.new()
correlationMatrix = cor(happinessSadness,use="na.or.complete")
correlationMatrix
plot.new()
plot1 = corrplot.mixed(correlationMatrix, lower.col = "black", number.cex = .7,tl.pos = "l",
title="Correlation Plot",mar=c(0,0,1,0),tl.cex = 1/par("cex"))
library(corrplot)
library(dplyr)
library(ggplot2)
# setwd("~/Downloads/DA/young-people-survey/youth-happiness-analysis/")
df <- read.csv("imputedResponses.csv",na.strings=c(""," ","NA"))
colnames <- read.csv("columns.csv")
# Following are the columns we chose as parameters to judge how happy pr sad a person is.
happinessFactors <- c("Hypochondria","Loneliness","Dreams","Number.of.friends","Mood.swings",
"Getting.angry","Life.struggles","Happiness.in.life","Energy.levels","Personality")
happinessSadness <- df[happinessFactors]
correlationMatrix = cor(happinessSadness,use="na.or.complete")
correlationMatrix
plot.new()
plot1 = corrplot.mixed(correlationMatrix, lower.col = "black", number.cex = .7,tl.pos = "l",
title="Correlation Plot",mar=c(0,0,1,0),tl.cex = 1/par("cex"))
covarianceMatrix = cov(happinessSadness, use="na.or.complete")
covarianceMatrix
# We consider the above mentoned variables as the factors of happiness and sadness.From their correlation
# plot we can infer that none of the variables under study are very highly correlated.So,we use these ten
# factors across sections of our dataset to find the variables which effect these factors the most and in
# the end effect the happiness / sadness of people.
par(mfrow=c(2,5))
for (factorV in happinessFactors){
# counts <- table(workingData[[factorV]],workingData$Age)
# barplot(counts, main= paste("Distribution by" ,factorV ,"and Age"),
#         xlab=factorV, col=c("#000019","#0000ff","#7f7fff","#b2b2ff","#e5e5ff")
# )
# legend("topright",legend = rownames(counts),fill = c("#000019","#0000ff","#7f7fff","#b2b2ff","#e5e5ff") ,ncol = 1,cex=0.4)
hist(happinessSadness[[factorV]], freq = FALSE)
x<-seq(1,5,length.out = 10)
y <- with(happinessSadness, dnorm(x, mean(factorV), sd(factorV)))
lines(x, y, col = "red")
}
# We consider the above mentoned variables as the factors of happiness and sadness.From their correlation
# plot we can infer that none of the variables under study are very highly correlated.So,we use these ten
# factors across sections of our dataset to find the variables which effect these factors the most and in
# the end effect the happiness / sadness of people.
plot.new()
library(corrplot)
library(dplyr)
library(ggplot2)
# setwd("~/Downloads/DA/young-people-survey/youth-happiness-analysis/")
df <- read.csv("imputedResponses.csv",na.strings=c(""," ","NA"))
colnames <- read.csv("columns.csv")
# Following are the columns we chose as parameters to judge how happy pr sad a person is.
happinessFactors <- c("Hypochondria","Loneliness","Dreams","Number.of.friends","Mood.swings",
"Getting.angry","Life.struggles","Happiness.in.life","Energy.levels","Personality")
happinessSadness <- df[happinessFactors]
correlationMatrix = cor(happinessSadness,use="na.or.complete")
correlationMatrix
plot.new()
library(corrplot)
library(dplyr)
library(ggplot2)
# setwd("~/Downloads/DA/young-people-survey/youth-happiness-analysis/")
df <- read.csv("imputedResponses.csv",na.strings=c(""," ","NA"))
colnames <- read.csv("columns.csv")
# Following are the columns we chose as parameters to judge how happy pr sad a person is.
happinessFactors <- c("Hypochondria","Loneliness","Dreams","Number.of.friends","Mood.swings",
"Getting.angry","Life.struggles","Happiness.in.life","Energy.levels","Personality")
happinessSadness <- df[happinessFactors]
correlationMatrix = cor(happinessSadness,use="na.or.complete")
correlationMatrix
plot.new()
plot1 = corrplot.mixed(correlationMatrix, lower.col = "black", number.cex = .7,tl.pos = "l",
title="Correlation Plot",mar=c(0,0,1,0),tl.cex = 1/par("cex"))
covarianceMatrix = cov(happinessSadness, use="na.or.complete")
covarianceMatrix
# We consider the above mentoned variables as the factors of happiness and sadness.From their correlation
# plot we can infer that none of the variables under study are very highly correlated.So,we use these ten
# factors across sections of our dataset to find the variables which effect these factors the most and in
# the end effect the happiness / sadness of people.
plot.new()
par(mfrow=c(2,5))
for (factorV in happinessFactors){
# counts <- table(workingData[[factorV]],workingData$Age)
# barplot(counts, main= paste("Distribution by" ,factorV ,"and Age"),
#         xlab=factorV, col=c("#000019","#0000ff","#7f7fff","#b2b2ff","#e5e5ff")
# )
# legend("topright",legend = rownames(counts),fill = c("#000019","#0000ff","#7f7fff","#b2b2ff","#e5e5ff") ,ncol = 1,cex=0.4)
hist(happinessSadness[[factorV]], freq = FALSE)
x<-seq(1,5,length.out = 10)
y <- with(happinessSadness, dnorm(x, mean(factorV), sd(factorV)))
lines(x, y, col = "red")
}
library(corrplot)
library(dplyr)
library(ggplot2)
# setwd("~/Downloads/DA/young-people-survey/youth-happiness-analysis/")
df <- read.csv("imputedResponses.csv",na.strings=c(""," ","NA"))
colnames <- read.csv("columns.csv")
# Following are the columns we chose as parameters to judge how happy pr sad a person is.
happinessFactors <- c("Hypochondria","Loneliness","Dreams","Number.of.friends","Mood.swings",
"Getting.angry","Life.struggles","Happiness.in.life","Energy.levels","Personality")
happinessSadness <- df[happinessFactors]
correlationMatrix = cor(happinessSadness,use="na.or.complete")
correlationMatrix
plot.new()
plot1 = corrplot.mixed(correlationMatrix, lower.col = "black", number.cex = .7,tl.pos = "l",
title="Correlation Plot",mar=c(0,0,1,0),tl.cex = 1/par("cex"))
covarianceMatrix = cov(happinessSadness, use="na.or.complete")
covarianceMatrix
# We consider the above mentoned variables as the factors of happiness and sadness.From their correlation
# plot we can infer that none of the variables under study are very highly correlated.So,we use these ten
# factors across sections of our dataset to find the variables which effect these factors the most and in
# the end effect the happiness / sadness of people.
# plot.new()
par(mfrow=c(2,5))
for (factorV in happinessFactors){
hist(happinessSadness[[factorV]], freq = FALSE)
x<-seq(1,5,length.out = 10)
y <- with(happinessSadness, dnorm(x, mean(factorV), sd(factorV)))
lines(x, y, col = "red")
}
# We consider the above mentoned variables as the factors of happiness and sadness.From their correlation
# plot we can infer that none of the variables under study are very highly correlated.So,we use these ten
# factors across sections of our dataset to find the variables which effect these factors the most and in
# the end effect the happiness / sadness of people.
plot.new()
library(corrplot)
library(dplyr)
library(ggplot2)
# setwd("~/Downloads/DA/young-people-survey/youth-happiness-analysis/")
df <- read.csv("imputedResponses.csv",na.strings=c(""," ","NA"))
colnames <- read.csv("columns.csv")
# Following are the columns we chose as parameters to judge how happy pr sad a person is.
happinessFactors <- c("Hypochondria","Loneliness","Dreams","Number.of.friends","Mood.swings",
"Getting.angry","Life.struggles","Happiness.in.life","Energy.levels","Personality")
happinessSadness <- df[happinessFactors]
correlationMatrix = cor(happinessSadness,use="na.or.complete")
correlationMatrix
plot.new()
library(corrplot)
library(dplyr)
library(ggplot2)
# setwd("~/Downloads/DA/young-people-survey/youth-happiness-analysis/")
df <- read.csv("imputedResponses.csv",na.strings=c(""," ","NA"))
colnames <- read.csv("columns.csv")
# Following are the columns we chose as parameters to judge how happy pr sad a person is.
happinessFactors <- c("Hypochondria","Loneliness","Dreams","Number.of.friends","Mood.swings",
"Getting.angry","Life.struggles","Happiness.in.life","Energy.levels","Personality")
happinessSadness <- df[happinessFactors]
correlationMatrix = cor(happinessSadness,use="na.or.complete")
correlationMatrix
plot.new()
plot1 = corrplot.mixed(correlationMatrix, lower.col = "black", number.cex = .7,tl.pos = "l",
title="Correlation Plot",mar=c(0,0,1,0),tl.cex = 1/par("cex"))
covarianceMatrix = cov(happinessSadness, use="na.or.complete")
covarianceMatrix
# We consider the above mentoned variables as the factors of happiness and sadness.From their correlation
# plot we can infer that none of the variables under study are very highly correlated.So,we use these ten
# factors across sections of our dataset to find the variables which effect these factors the most and in
# the end effect the happiness / sadness of people.
plot.new()
par(mfrow=c(2,5))
for (factorV in happinessFactors){
hist(happinessSadness[[factorV]], freq = FALSE)
x<-seq(1,5,length.out = 10)
y <- with(happinessSadness, dnorm(x, mean(factorV), sd(factorV)))
lines(x, y, col = "red")
}
library(corrplot)
library(dplyr)
library(ggplot2)
# setwd("~/Downloads/DA/young-people-survey/youth-happiness-analysis/")
df <- read.csv("imputedResponses.csv",na.strings=c(""," ","NA"))
colnames <- read.csv("columns.csv")
# Following are the columns we chose as parameters to judge how happy pr sad a person is.
happinessFactors <- c("Hypochondria","Loneliness","Dreams","Number.of.friends","Mood.swings",
"Getting.angry","Life.struggles","Happiness.in.life","Energy.levels","Personality")
happinessSadness <- df[happinessFactors]
correlationMatrix = cor(happinessSadness,use="na.or.complete")
correlationMatrix
plot.new()
library(corrplot)
library(dplyr)
library(ggplot2)
# setwd("~/Downloads/DA/young-people-survey/youth-happiness-analysis/")
df <- read.csv("imputedResponses.csv",na.strings=c(""," ","NA"))
colnames <- read.csv("columns.csv")
# Following are the columns we chose as parameters to judge how happy pr sad a person is.
happinessFactors <- c("Hypochondria","Loneliness","Dreams","Number.of.friends","Mood.swings",
"Getting.angry","Life.struggles","Happiness.in.life","Energy.levels","Personality")
happinessSadness <- df[happinessFactors]
correlationMatrix = cor(happinessSadness,use="na.or.complete")
correlationMatrix
plot.new()
plot1 = corrplot.mixed(correlationMatrix, lower.col = "black", number.cex = .7,tl.pos = "l",
title="Correlation Plot",mar=c(0,0,1,0),tl.cex = 1/par("cex"))
covarianceMatrix = cov(happinessSadness, use="na.or.complete")
covarianceMatrix
# We consider the above mentoned variables as the factors of happiness and sadness.From their correlation
# plot we can infer that none of the variables under study are very highly correlated.So,we use these ten
# factors across sections of our dataset to find the variables which effect these factors the most and in
# the end effect the happiness / sadness of people.
plot.new()
dev.off()
par(mfrow=c(2,5))
for (factorV in happinessFactors){
hist(happinessSadness[[factorV]], freq = FALSE)
x<-seq(1,5,length.out = 10)
y <- with(happinessSadness, dnorm(x, mean(factorV), sd(factorV)))
lines(x, y, col = "red")
}
